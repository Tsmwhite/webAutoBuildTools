{"remainingRequest":"/usr/local/var/www/webAutoBuildTools/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/webAutoBuildTools/app/src/views/index.vue?vue&type=style&index=0&id=a83bd3b0&scoped=true&lang=less&","dependencies":[{"path":"/usr/local/var/www/webAutoBuildTools/app/src/views/index.vue","mtime":1687145453951},{"path":"/usr/local/var/www/webAutoBuildTools/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/webAutoBuildTools/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/usr/local/var/www/webAutoBuildTools/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/usr/local/var/www/webAutoBuildTools/app/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/webAutoBuildTools/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/webAutoBuildTools/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgYmFja2dyb3VuZDogcmdiKDI0MCwgMjQyLCAyNDUpOwoKICAjZXhhbXBsZXMgewogICAgZmxleC1zaHJpbms6IDA7CiAgICB3aWR0aDogMzAwcHg7CgogICAgL2RlZXAvIC5jb250YWluZXItdGFnIHsKICAgICAgcGFkZGluZzogMjBweCA0MHB4OwogICAgICBib3JkZXI6IDFweCBzb2xpZCAjMjQ3NWZjOwogICAgfQogIH0KCiAgI3ByZXZpZXcgewogICAgZmxleDogMTsKICAgIG1hcmdpbjogMjRweDsKICAgIGJhY2tncm91bmQ6ICNGRkZGRkY7CgogICAgL2RlZXAvIC5jb250YWluZXItdGFnIHsKICAgICAgbWluLWhlaWdodDogMTIwcHg7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlOGU4ZTg7CiAgICB9CiAgfQoKICAjY29uZmlnIHsKICAgIHdpZHRoOiAzMDBweDsKICAgIGZsZXgtc2hyaW5rOiAwOwogICAgYmFja2dyb3VuZDogI0ZGRkZGRjsKICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAuKA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <CptExamples id=\"examples\"></CptExamples>\n    <div id=\"preview\">\n      <template v-for=\"(cpt,index) in preComponentKeys\">\n        <CptItem :key=\"index\"\n                 :is=\"'example_'+cpt.key\"\n                 :class=\"['component-instance',{'cpt-container': isContainer(cpt.key)}]\"\n                 :component=\"cpt\"\n                 :data-uuid=\"getUuid\"\n                 :data-key=\"cpt.key\"></CptItem>\n      </template>\n    </div>\n    <div id=\"config\"></div>\n  </div>\n</template>\n<script>\nimport CptExamples from \"@/components/cpt-examples.vue\";\nimport CptItem from \"@/components/cpt-item.vue\";\nimport dragula from \"dragula\";\nimport 'dragula/dist/dragula.min.css';\nimport example_alert from \"@/components/examples/alert.vue\";\nimport example_alert_info from \"@/components/examples/alert_info.vue\";\nimport example_alert_warning from \"@/components/examples/alert_warning.vue\";\nimport example_abutton from \"@/components/examples/abutton.vue\";\nimport example_aselect from \"@/components/examples/aselect.vue\";\nimport example_atable from \"@/components/examples/atable.vue\";\nimport example_ainput from \"@/components/examples/ainput.vue\";\nimport example_background_white from \"@/components/examples/background_white.vue\";\nimport example_background_normal from \"@/components/examples/background_normal.vue\";\nimport example_background_flex from \"@/components/examples/background_flex.vue\";\nimport example_background_flex_between from \"@/components/examples/background_flex_between.vue\";\nimport example_button_add from \"@/components/examples/button_add.vue\";\nimport example_button_ghost from \"@/components/examples/button_ghost.vue\";\nimport example_button_primary from \"@/components/examples/button_primary.vue\";\nimport example_input_number from \"@/components/examples/input_number.vue\";\nimport {componentsMap} from \"@/components/config/components\";\n\nexport default {\n  components: {\n    CptItem,\n    CptExamples,\n    example_alert,\n    example_alert_info,\n    example_alert_warning,\n    example_background_white,\n    example_background_normal,\n    example_background_flex,\n    example_background_flex_between,\n    example_abutton,\n    example_button_add,\n    example_button_ghost,\n    example_button_primary,\n    example_ainput,\n    example_input_number,\n    example_aselect,\n    example_atable,\n  },\n  data() {\n    return {\n      preComponentKeys: [],\n      componentsMap: {},\n    }\n  },\n  mounted() {\n    this.componentsMap = componentsMap()\n    this.dragulaInit()\n  },\n  methods: {\n    dragulaInit() {\n      let currentKey\n      const drake = dragula([\n        ...document.getElementsByClassName(\"component-box\"),\n        ...document.getElementsByClassName(\"cpt-container\"),\n        document.getElementById(\"preview\")\n      ], {\n        isContainer: (el) => {\n          return el.classList.contains(\"cpt-container\")\n        },\n        copy: (el, source) => {\n          // console.log(\"el-source\", el, source)\n          if (source.classList.contains(\"component-box\")) {\n            currentKey = el.getAttribute(\"data-key\")\n            return true\n          } else {\n            currentKey = null\n            return false\n          }\n        },\n        accepts: (el, target) => {\n          // console.log(el, target)\n          return !target.classList.contains(\"component-box\")\n        },\n      })\n      drake.on(\"drop\", (el, container) => {\n        console.log(\"container\",container)\n        if (container && (container.id === \"preview\" || container.classList.contains(\"cpt-container\")) && currentKey) {\n          el.setAttribute(\"class\", el.classList + \" is-copy-dom\")\n          this.preComponentKeys = this.previewComponentsScan()\n          this.$nextTick(() => {\n            let waitDelNodes = document.getElementsByClassName(\"is-copy-dom\")\n            for (let i = 0; i < waitDelNodes.length; i++) {\n              waitDelNodes[i].parentNode.removeChild(waitDelNodes[i])\n            }\n          })\n          console.log(\"this.preComponentKeys\", this.preComponentKeys)\n        }\n      })\n      console.log(drake)\n      // drake.on(\"out\", () => {\n      //   console.log(\"out\")\n      // })\n      // drake.on(\"drag\", () => {\n      //   console.log(\"drag\")\n      // })\n      // drake.on(\"drop\", () => {\n      //   console.log(\"drop\")\n      // })\n      // drake.on(\"over\", () => {\n      //   console.log(\"over\")\n      // })\n    },\n    previewComponentsScan() {\n      let baseContainer = document.getElementById(\"preview\")\n      return this.containerElementToTree(baseContainer)\n    },\n    containerElementToTree(containerEl) {\n      let childNodes = containerEl.childNodes\n      let components = []\n      let node, cptKey, children\n      for (let i = 0; i < childNodes.length; i++) {\n        node = childNodes[i]\n        cptKey = node.getAttribute(\"data-key\")\n        children = []\n        if (!cptKey) {\n          console.warn(\"childNodes key not found\")\n          continue;\n        }\n        if (this.elIsContainer(childNodes[i])) {\n          children = this.containerElementToTree(childNodes[i])\n        }\n        components.push({\n          key: cptKey,\n          children: children,\n        })\n      }\n      return components\n    },\n    elIsContainer(el) {\n      return el.classList.contains(\"container-tag\")\n    },\n    isContainer(cptKey) {\n      try {\n        let config = this.componentsMap[cptKey].config || {}\n        return config.isContainer\n      } catch (e) {\n        console.error(\"isContainer error\", e)\n        return false\n      }\n    },\n    getUuid() {\n\n    },\n  }\n}\n</script>\n<style scoped lang=\"less\">\n.container {\n  display: flex;\n  background: rgb(240, 242, 245);\n\n  #examples {\n    flex-shrink: 0;\n    width: 300px;\n\n    /deep/ .container-tag {\n      padding: 20px 40px;\n      border: 1px solid #2475fc;\n    }\n  }\n\n  #preview {\n    flex: 1;\n    margin: 24px;\n    background: #FFFFFF;\n\n    /deep/ .container-tag {\n      min-height: 120px;\n      border: 1px solid #e8e8e8;\n    }\n  }\n\n  #config {\n    width: 300px;\n    flex-shrink: 0;\n    background: #FFFFFF;\n  }\n}\n</style>"]}]}